services:
  api-gateway:
    profiles: ["service"]
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: td-api-gateway
    container_name: td-api-gateway
    environment:
      - PORT=${API_GATEWAY_PORT}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}:${AUTH_SERVICE_PORT}
      - TOUR_SERVICE_URL=${TOUR_SERVICE_URL}:${TOUR_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"

  auth-db:
    profiles: ["db"]
    image: postgres:16-alpine
    container_name: td-auth-db
    environment:
      - POSTGRES_HOST=${AUTH_DB_HOST}
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
    ports:
      - "${AUTH_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  tour-db:
    profiles: ["db"]
    image: postgres:16-alpine
    container_name: td-tour-db
    environment:
      - POSTGRES_HOST=${TOUR_DB_HOST}
      - POSTGRES_USER=${TOUR_DB_USER}
      - POSTGRES_PASSWORD=${TOUR_DB_PASSWORD}
      - POSTGRES_DB=${TOUR_DB_NAME}
    ports:
      - "${TOUR_DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TOUR_DB_USER} -d ${TOUR_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  follower-db:
    profiles: ["db"]
    image: neo4j:5.26-community
    container_name: td-follower-db
    environment:
      - NEO4J_AUTH=${FOLLOWER_DB_USER}/${FOLLOWER_DB_PASSWORD}
      - NEO4J_dbms_default__database=${FOLLOWER_DB_NAME}
      #- NEO4J_dbms_connector_http_enabled=false  # Disable HTTP browser
      #- NEO4J_dbms_connector_https_enabled=false # Disable HTTPS browser
    ports:
      - "7474:7474"                                 # HTTP port (for Neo4j Browser)
      - "${FOLLOWER_DB_PORT}:7687"                  # Bolt port
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u ${FOLLOWER_DB_USER} -p ${FOLLOWER_DB_PASSWORD} 'RETURN 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  auth-service:
    profiles: ["service"]
    build:
      context: ./auth
      dockerfile: Dockerfile
    image: td-auth-service
    container_name: td-auth-service
    environment:
      - PORT=${AUTH_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - AUTH_DB_HOST=${AUTH_DB_HOST}
      - AUTH_DB_USER=${AUTH_DB_USER}
      - AUTH_DB_PASSWORD=${AUTH_DB_PASSWORD}
      - AUTH_DB_NAME=${AUTH_DB_NAME}
      - AUTH_DB_PORT=${AUTH_DB_PORT}
      - FOLLOWER_SERVICE_URL=${FOLLOWER_SERVICE_URL}:${FOLLOWER_SERVICE_PORT}
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"

  follower-service:
    profiles: ["service"]
    build:
      context: ./follower
      dockerfile: Dockerfile
    image: td-follower-service
    container_name: td-follower-service
    environment:
      - PORT=${FOLLOWER_SERVICE_PORT}
      - FOLLOWER_DB_URL=${FOLLOWER_DB_URL}:${FOLLOWER_DB_PORT}
      - FOLLOWER_DB_USER=${FOLLOWER_DB_USER}
      - FOLLOWER_DB_PASSWORD=${FOLLOWER_DB_PASSWORD}
    ports:
      - "${FOLLOWER_SERVICE_PORT}:${FOLLOWER_SERVICE_PORT}"

  tour-service:
    profiles: ["service"]
    build:
      context: ./tour
      dockerfile: Dockerfile
    image: td-tour-service
    container_name: td-tour-service
    environment:
      - PORT=${TOUR_SERVICE_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - TOUR_DB_HOST=${TOUR_DB_HOST}
      - TOUR_DB_USER=${TOUR_DB_USER}
      - TOUR_DB_PASSWORD=${TOUR_DB_PASSWORD}
      - TOUR_DB_NAME=${TOUR_DB_NAME}
      - TOUR_DB_PORT=${TOUR_DB_PORT}
    ports:
      - "${TOUR_SERVICE_PORT}:${TOUR_SERVICE_PORT}"


  seed:
    profiles: ["service"]
    build:
      context: ./seed
      dockerfile: Dockerfile
    image: td-seed
    container_name: td-seed
    environment:
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}:${AUTH_SERVICE_PORT}
      - FOLLOWER_SERVICE_URL=${FOLLOWER_SERVICE_URL}:${FOLLOWER_SERVICE_PORT}
    depends_on:
      - auth-service
      - follower-service